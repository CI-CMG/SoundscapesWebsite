```{python}
#| include: false
import pandas as pd
from datetime import date
from tabulate import tabulate
from IPython.display import display, HTML, Image
import os
import ipywidgets as widgets


def makeButtons(generalFormat, identifier):
    buttons = ""
    scripts = ""
    inputDir = "https://github.com/CI-CMG/SoundscapeScenes/blob/main/ONMS-Sound/report/"
    path = inputDir + generalFormat
    path = path.replace("***", sites[0])
    path += "?raw=true"
    initialImage = f'<img src="{path}" width="700" id="{identifier}">'
    if len(sites) == 1:
        return initialImage
    
    for site in sites:
        path = inputDir + generalFormat
        path = path.replace("***", site)
        path += "?raw=true"
        
        buttons += f'<button onclick="{site}{identifier}()" style="padding: 10px; color: white; margin: 4px 4px; background-color: #008CBA;">{site}</button>'
        scripts += f"""
                    <script>
                    function {site}{identifier}() {{
                        var imgElement = document.getElementById('{identifier}');
                        imgElement.src = "{path}";
                    }}
                    </script>
        """
    return buttons + initialImage + scripts
  
def makeImage(imageName, identifier):
    inputDir = "https://github.com/CI-CMG/SoundscapeScenes/blob/main/ONMS-Sound/report/"
    path = inputDir + imageName
    path += "?raw=true"
    initialImage = f'<img src="{path}" width="700" id="{identifier}">'
    return initialImage

inputDir = os.path.normpath(os.path.join(os.getcwd(), "resources"))
metaFile = os.path.join(inputDir, "ONMSSound_IndicatorCategories.xlsx")
metadata = pd.read_excel(metaFile, sheet_name="Summary", header=1)
lookup = [row for index, row in metadata.iterrows() if row.iloc[4] in sites]
dicts = [l.to_dict() for l in lookup]

df = pd.read_excel(metaFile, sheet_name="Standard Report Text", engine_kwargs={'keep_links': True})
standardTextDict = pd.Series(df.iloc[:, 3].values, index=df.iloc[:, 1]).to_dict()

for key in standardTextDict:
    value = standardTextDict[key]
    if isinstance(value, str):  # Only process if it's a string
        while "**" in value:
            value = value.replace("**", "<b>", 1)
            value = value.replace("**", "</b>", 1)
        standardTextDict[key] = value

df = pd.read_excel(metaFile, sheet_name="SB")
summaryTable = [list(df.columns.values)]
for i in range(len(summaryTable[0])):
    summaryTable[0][i] = summaryTable[0][i].replace(" ", ".")
summaryTable.extend(df.values.tolist())

htmlTable = tabulate(summaryTable, tablefmt="html")
```

---
title: "Ocean Sound Monitoring in U.S. National Marine Sanctuaries"
author: "draft"
date: "today"
output: 
  html_document: 
    fig_caption: true
editor_options: 
  markdown: 
    wrap: 72
---

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Why are we monitoring ocean sound?
```{python}
#| echo: false
display(HTML(standardTextDict["What is ocean sound?"]))
#display(HTML(makeImage("MBNMS.jpg", "MarineLife")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Where are we listening?
```{python}
#| echo: false
display(HTML(standardTextDict["When, where, & why are we listening?"]))
display(HTML(makeImage("map_ONMS_2024-11-05.jpg", "Map")))
display(HTML(makeImage("gantt_ONMS_2025-04-22.jpg","Gantt")))

```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## What is a soundscape?
```{python}
#| echo: false
display(HTML(standardTextDict["What is a soundscape?"]))
display(HTML(makeImage("plot_sb01_SeasonalSPL.jpg", "Seasons")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## What are we learning?
```{python}
#| echo: false
display(HTML(standardTextDict["What are we learning?"]))
```
:::
