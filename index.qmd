```{python}
#| include: false
import pandas as pd
from datetime import date
from tabulate import tabulate
from IPython.display import display, HTML, Image
import os
import ipywidgets as widgets

sites = ["sb01", "sb03"]

def makeButtons(generalFormat, identifier):
    buttons = ""
    scripts = ""
    inputDir = "https://raw.githubusercontent.com/CI-CMG/SoundscapesWebsite/refs/heads/main/content/resources"
    path = f'{inputDir}/{generalFormat}'
    path = path.replace("***", sites[0])
    initialImage = f'<img src="{path}" width="700" id="{identifier}" onclick="{identifier}Toggle()">'
    initialImage += f"""
                    <script>
                    function {identifier}Toggle() {{
                        if (!this.fullscreenElement) {{
                            this.requestFullscreen();
                            this.setAttribute("fullscreen",""); 
                        }} else {{
                            this.exitFullscreen();
                            this.removeAttribute("fullscreen"); 
                        }}
                    }}
                    </script>
    """
    if len(sites) == 1:
        return initialImage
    
    for site in sites:
        path = f'{inputDir}/{generalFormat}'
        path = path.replace("***", site)

        buttons += f'<button onclick="{site}{identifier}()" style="padding: 10px; color: white; margin: 4px 4px; background-color: #008CBA;">{site}</button>'
        scripts += f"""
                    <script>
                    function {site}{identifier}() {{
                        var imgElement = document.getElementById('{identifier}');
                        imgElement.src = "{path}";
                    }}
                    </script>
        """
    return buttons + initialImage + scripts
  
def makeImage(imageName, identifier):
    inputDir = "https://raw.githubusercontent.com/CI-CMG/SoundscapesWebsite/refs/heads/main/content/resources"
    path = f'{inputDir}/{imageName}'
    initialImage = f'<img src="{path}" width="700" id="{identifier}" onclick="{identifier}Toggle()">'
    initialImage += f"""
                    <script>
                    function {identifier}Toggle() {{
                        if (!this.fullscreenElement) {{
                            this.requestFullscreen();
                            this.setAttribute("fullscreen",""); 
                        }} else {{
                            this.exitFullscreen();
                            this.removeAttribute("fullscreen"); 
                        }}
                    }}
                    </script>
    """
    return initialImage
  
def embedMapViewer():
    return f'<embed src="https://www.ncei.noaa.gov/maps/passive-acoustic-data/" style="width:900px; height: 800px;">'

inputDir = os.path.normpath(os.path.join(os.getcwd(), "content/resources"))
metaFile = os.path.join(inputDir, "ONMSSound_IndicatorCategories.xlsx")
metadata = pd.read_excel(metaFile, sheet_name="Summary", header=1)
lookup = [row for index, row in metadata.iterrows() if row.iloc[4] in sites]
dicts = [l.to_dict() for l in lookup]

df = pd.read_excel(metaFile, sheet_name="Standard Report Text", engine_kwargs={'keep_links': True})
standardTextDict = pd.Series(df.iloc[:, 3].values, index=df.iloc[:, 1]).to_dict()

for key in standardTextDict:
    value = standardTextDict[key]
    if isinstance(value, str):  # Only process if it's a string
        while "**" in value:
            value = value.replace("**", "<b>", 1)
            value = value.replace("**", "</b>", 1)
        standardTextDict[key] = value
```

---
title: "Ocean Sound Monitoring in U.S. National Marine Sanctuaries"
date: "today"
output: 
  html_document: 
    fig_caption: true
editor_options: 
  markdown: 
    wrap: 72
---

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Why are we monitoring ocean sound?
```{python}
#| echo: false
display(HTML(standardTextDict["What is ocean sound?"]))
#display(HTML(makeImage("MBNMS.jpg", "MarineLife")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Overview of ocean sound monitoring effort
```{python}
#| echo: false
display(HTML(standardTextDict["When, where, & why are we listening?"]))
display(HTML(embedMapViewer()))
```
### Summary of ONMS Sound data available through NCEI Passive Acoustic Data Archive <a href="https://www.ncei.noaa.gov/maps/passive-acoustic-data/">Map Viewer</a> and <a href="https://console.cloud.google.com/storage/browser/noaa-passive-bioacoustic?invt=AbwKlA">Google Cloud Platform</a>  
```{python}
#| echo: false
display(HTML(makeImage("gantt_ONMS.jpg","Gantt")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Understanding ocean sound
```{python}
#| echo: false
display(HTML(makeImage("sanctsound_scene.jpg", "soundscape infographic")))
display(HTML(standardTextDict["Understanding Ocean Sound"]))
```
### Seasonal soundscape conditions
```{python}
#| echo: false
display(HTML(standardTextDict["Seasonal soundscape conditions"]))
display(HTML(makeImage("plot_sb01_SeasonalSPL.jpg", "seasons")))
```
### Soundscape comparison
```{python}
#| echo: false
display(HTML(standardTextDict["Soundscape comparison"]))
display(HTML(makeImage("plot_sb01_Compare.jpg", "sites")))
```
### Indicators from ocean sound
```{python}
#| echo: false
display(HTML(standardTextDict["Indicators from ocean sound"]))
display(HTML(makeImage("plot_mb01_FinalRosePlot.jpg", "fish")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## What are we learning?
```{python}
#| echo: false
display(HTML(standardTextDict["What are we learning?"]))
```
:::
